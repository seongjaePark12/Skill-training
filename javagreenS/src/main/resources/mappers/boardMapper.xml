<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javagreenS.dao.BoardDAO">

  <select id="totRecCnt" resultType="int">
    select count(*) from board;
  </select>
  
  <select id="totSearchRecCnt" resultType="int">
    select count(*) from board where ${search} like concat('%',#{searchString},'%');
  </select>
  
  <select id="getBoardList" resultType="com.spring.javagreenS.vo.BoardVO">
    select *, (select count(*) from boardReply where boardIdx=bb.idx) as replyCount, cast(TIMESTAMPDIFF(MINUTE, wDate, NOW()) / 60 as signed integer) AS diffTime  from board as bb order by idx desc limit #{startIndexNo},#{pageSize};
  </select>
  
  <select id="getBoardSearch" resultType="com.spring.javagreenS.vo.BoardVO">
    select *, cast(TIMESTAMPDIFF(MINUTE, wDate, NOW()) / 60 as signed integer) AS diffTime  from board where ${search} like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo},#{pageSize};
  </select>
  
  <select id="getBoardContent" resultType="com.spring.javagreenS.vo.BoardVO">
    select * from board where idx = #{idx};
  </select>

  <!-- <![CDATA[idx > 5]]> -->

  <select id="getPreNext" resultType="com.spring.javagreenS.vo.BoardVO">
    select idx,title from board where  idx in (
      (select idx from board where <![CDATA[idx < #{idx}]]> order by idx desc limit 1),
      (select idx from board where <![CDATA[idx > #{idx}]]> limit 1));
  </select>
  
  <select id="getMinIdx" resultType="int">
    select min(idx) from board;
  </select>
  
  <select id="maxLevelOrder" resultType="String">
    select max(levelOrder) from boardReply where boardIdx = #{boardIdx};
  </select>
  
  <select id="getBoardReply" resultType="com.spring.javagreenS.vo.BoardReplyVO">
    select * from boardReply where boardIdx = #{idx} order by levelOrder;
  </select>
  
  
  
  <insert id="setBoardInput">
    insert into board values (default,#{vo.nickName},#{vo.title},#{vo.email},#{vo.homePage},#{vo.content},default,default,#{vo.hostIp},default,#{vo.mid});
  </insert>
  
  <insert id="setBoardReplyInput">
    insert into boardReply values (default,#{replyVo.boardIdx},#{replyVo.mid},#{replyVo.nickName},default,#{replyVo.hostIp},#{replyVo.content},default,#{replyVo.levelOrder});
  </insert>
  
  <insert id="setBoardReplyInput2">
    insert into boardReply values (default,#{replyVo.boardIdx},#{replyVo.mid},#{replyVo.nickName},default,#{replyVo.hostIp},#{replyVo.content},#{replyVo.level},#{replyVo.levelOrder});
  </insert>

  
  
  <update id="setReadNum">
    update board set readNum = readNum + 1 where idx = #{idx};
  </update>
  
  <update id="setBoardUpdate">
    update board set title=#{vo.title},email=#{vo.email},homePage=#{vo.homePage},content=#{vo.content},hostIp=#{vo.hostIp} where idx=#{vo.idx};
  </update>
  
  <update id="levelOrderPlusUpdate">
    update boardReply set levelOrder=levelOrder+1 where boardIdx=#{replyVo.boardIdx} and levelOrder>#{replyVo.levelOrder};
  </update>
  
  <update id="setBoardReplyDeleteOk">
    update boardReply set hostIp='' where idx = #{idx};
  </update>
  
  <update id="setGoodCount">
    update board set good=good+1 where idx = #{idx};
  </update>
  
  <update id="setGoodCountMinus">
    update board set good=good-1 where idx = #{idx};
  </update>
  
  
  <delete id="setBoardDelete">
    delete from board where idx = #{idx};
  </delete>
  <!-- 
  <delete id="setBoardReplyDeleteOk">
    delete from boardReply where idx = #{idx};
  </delete>
   -->
</mapper>