<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/member/**" location="/resources/data/member/" />
	<resources mapping="/ckeditor/**" location="/resources/ckeditor/" />
	<resources mapping="/data/ckeditor/**" location="/resources/data/ckeditor/" />
	<resources mapping="/pds/**" location="/resources/data/pds/" />
	<resources mapping="/data/dbShop/**" location="/resources/data/dbShop/" />
	<resources mapping="/dbShop/product/**" location="/resources/data/dbShop/product/" />
	<resources mapping="/data/qrCode/**" location="/resources/data/qrCode/" />
	<resources mapping="/inquiry/**" location="/resources/data/inquiry/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.javagreenS" />
	
	<!-- BCryptPasswordEncoder객체를 사용하기위한 Bean 등록 -->
  <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
  <!-- 파일업로드에 필요한 라이브러리를 Bean으로 등록(용량제한클래스등록) -->
  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <beans:property name="maxUploadSize" value="20971520"/>  <!-- 업로드파일의 최대용량을 20MByte로 제한 -->
    <beans:property name="defaultEncoding" value="utf-8"/>
  </beans:bean>
  
  <!-- Interceptor 설정하기 -->
  <beans:bean id="otherInterceptor" class="com.spring.javagreenS.interceptor.OtherInterceptor"/>
  <beans:bean id="memberInterceptor" class="com.spring.javagreenS.interceptor.MemberInterceptor"/>
  <beans:bean id="boardInterceptor" class="com.spring.javagreenS.interceptor.BoardInterceptor"/>
  <beans:bean id="pdsInterceptor" class="com.spring.javagreenS.interceptor.PdsInterceptor"/>
  <beans:bean id="adminInterceptor" class="com.spring.javagreenS.interceptor.AdminInterceptor"/>
  <interceptors>
    <interceptor>
      <mapping path="/study/**"/>
      <mapping path="/shop/**"/>
      <mapping path="/schedule/**"/>
      <beans:ref bean="otherInterceptor"/>
    </interceptor>
    <interceptor>
      <mapping path="/member/**"/>
      <exclude-mapping path="/member/memLogin"/>
      <exclude-mapping path="/member/memLogout"/>
      <exclude-mapping path="/member/memJoin"/>
      <exclude-mapping path="/member/memIdCheck"/>
      <exclude-mapping path="/member/nickNameCheck"/>
      <exclude-mapping path="/member/memIdPwdSearch"/>
      <exclude-mapping path="/member/memIdPwdSearchOk"/>
      <exclude-mapping path="/kakao/kakaoMain"/>
      <exclude-mapping path="/member/memKakaoLogin"/>
      <!-- <exclude-mapping path="/member/memList"/> -->
      <beans:ref bean="memberInterceptor"/>
    </interceptor>
    <interceptor>
      <mapping path="/board/**"/>
      <mapping path="/member/memList"/>
      <mapping path="/pds/pdsDownload"/>
      <mapping path="/pds/pdsInfor"/>
      <mapping path="/dbShop/**"/>    <!-- 쇼핑몰도 정회원 이상만 사용할 수 있게 처리한다. -->
      <mapping path="/qna/**"/>       <!-- QnA도 정회원 이상만 사용할 수 있게 처리한다. -->
      <mapping path="/inquiry/**"/>       <!-- 1:1문의도 정회원 이상만 사용할 수 있게 처리한다. -->
      <exclude-mapping path="/board/boardList"/>
      <beans:ref bean="boardInterceptor"/>
    </interceptor>
    <interceptor>
      <mapping path="/pds/**"/>
      <exclude-mapping path="/pds/pdsList"/>
      <exclude-mapping path="/pds/pdsDownload"/>
      <exclude-mapping path="/pds/pdsInfor"/>
      <beans:ref bean="pdsInterceptor"/>
    </interceptor>
    <interceptor>
      <mapping path="/admin/**"/>
      <beans:ref bean="adminInterceptor"/>
    </interceptor>
  </interceptors>
  
  <!-- 트랜젝션을 어노테이션으로 처리하기위해 클래스를 등록해준다. -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
  
</beans:beans>
